<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zpreston的博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.zpreston.top/"/>
  <updated>2017-11-30T06:49:39.561Z</updated>
  <id>http://www.zpreston.top/</id>
  
  <author>
    <name>Zpreston</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>spring消息通信之ActiveMQ</title>
    <link href="http://www.zpreston.top/articles/844bf7a3/"/>
    <id>http://www.zpreston.top/articles/844bf7a3/</id>
    <published>2017-11-29T07:44:37.000Z</published>
    <updated>2017-11-30T06:49:39.561Z</updated>
    
    <content type="html"><![CDATA[<p>异步消息通信是指一个应用程序向另一个应用程序间接发送消息的一种方式，这种不同于同步消息，异步消息无需等待对方的响应，不会阻塞当前程序。</p>
<h3 id="异步消息的两个主要概念"><a href="#异步消息的两个主要概念" class="headerlink" title="异步消息的两个主要概念"></a>异步消息的两个主要概念</h3><ol>
<li>消息代理<br>当一个应用发送消息时，会将消息交给一个消息代理。消息代理实际上类似于邮局，可以确保消息被投递到指定的目的地，同时解放发送者，使其能够继续进行其他的业务。</li>
<li>目的地<br>目的地相当于信件上的地址，这样消息代理就可以知道这则消息应该发送到哪里，每条异步消息都有一个目的地。尽管不同的消息系统会提供不同的消息路由模式，但是有两种通用的目的地：队列（queue）和主题（topic），每种类型都与特定的消息模型相关联，分别是点对点模型（队列）和发布/订阅模型（主题）。</li>
</ol>
<h3 id="点对点模型"><a href="#点对点模型" class="headerlink" title="点对点模型"></a>点对点模型</h3><p>每个消息都有一个发送者和接收者，当消息代理得到消息时，他将消息放到一个队列中。当接收者请求队列中的下一条消息时，消息会从队列中取出，并投递给接收者。然后被投递的消息会从队列中删除，这样就可以保证消息只能投递给一个接收者。</p>
<h3 id="发布-订阅模型"><a href="#发布-订阅模型" class="headerlink" title="发布/订阅模型"></a>发布/订阅模型</h3><p>在发布/订阅模型中，消息会发送给一个主题。与队列类似，多个接收者都可以监听一个主题。但是，与队列不同的是，消息不再只是投递给一个接收者，而是主题的所有订阅者都会接收到此消息的副本。</p>
<p>消息中间件作为消息代理，都提供了对上述两种模型的支持，spring对消息代理也有很好的支持，提供了消息模板JmsTemplate，让开发者可以很方便地在生产方（消息发送方）发送队列消息或主题消息，也能够非常容易得在消费方（消息接收方）接收消息。下面以ActiveMQ为例搭建Spring的消息代理。</p>
<h3 id="下载ActiveMQ并运行"><a href="#下载ActiveMQ并运行" class="headerlink" title="下载ActiveMQ并运行"></a>下载ActiveMQ并运行</h3><p>地址：<a href="http://activemq.apache.org/download.html" target="_blank" rel="external">http://activemq.apache.org/download.html</a></p>
<h3 id="发送方"><a href="#发送方" class="headerlink" title="发送方"></a>发送方</h3><h4 id="添加maven依赖-pom-xml"><a href="#添加maven依赖-pom-xml" class="headerlink" title="添加maven依赖 pom.xml"></a>添加maven依赖 pom.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.activemq<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>activemq-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.activemq<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>activemq-pool<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.12.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jms<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="配置ActiveMQ-activemq-xml"><a href="#配置ActiveMQ-activemq-xml" class="headerlink" title="配置ActiveMQ activemq.xml"></a>配置ActiveMQ activemq.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></div><div class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></div><div class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></div><div class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/context</span></span></div><div class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/context/spring-context.xsd"</span></span></div><div class="line"><span class="tag">&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.zpreston.activemq"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jmsFactory"</span> <span class="attr">class</span>=<span class="string">"org.apache.activemq.pool.PooledConnectionFactory"</span></span></div><div class="line"><span class="tag">          <span class="attr">destroy-method</span>=<span class="string">"stop"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connectionFactory"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.apache.activemq.ActiveMQConnectionFactory"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"brokerURL"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>tcp://localhost:61616<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxConnections"</span> <span class="attr">value</span>=<span class="string">"100"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--使用缓存可以提升效率--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"cachingConnectionFactory"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jms.connection.CachingConnectionFactory"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"targetConnectionFactory"</span> <span class="attr">ref</span>=<span class="string">"jmsFactory"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sessionCacheSize"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--点对点模型，即队列，队列名称为zpreston-queue--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"destinationQueue"</span> <span class="attr">class</span>=<span class="string">"org.apache.activemq.command.ActiveMQQueue"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">value</span>=<span class="string">"zpreston-queue"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--发布者/订阅模型，即主题，主题名称为zpreston-topic--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"destinationTopic"</span> <span class="attr">class</span>=<span class="string">"org.apache.activemq.command.ActiveMQTopic"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">value</span>=<span class="string">"zpreston-topic"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jmsTemplate"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jms.core.JmsTemplate"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connectionFactory"</span> <span class="attr">ref</span>=<span class="string">"cachingConnectionFactory"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"messageConverter"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.jms.support.converter.SimpleMessageConverter"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">		<span class="comment">&lt;!--指定默认的接收方，当发送方没有指定接收方时使用该默认值--&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultDestination"</span> <span class="attr">ref</span>=<span class="string">"destinationQueue"</span>/&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 开启订阅模式 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"pubSubDomain"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"receiveTimeout"</span> <span class="attr">value</span>=<span class="string">"10000"</span> /&gt;</span></div><div class="line">        <span class="comment">&lt;!-- deliveryMode, priority, timeToLive 的开关要生效，必须配置为true，默认false--&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"explicitQosEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 发送模式 1:非持久 2:持久</span></div><div class="line"><span class="comment">		持久模式下，当接受方不在线时，发送方会将消息保存在数据库中，接收方上线会自动接收</span></div><div class="line"><span class="comment">		非持久模式下，当接收方上线后需要主动拉取消息--&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"deliveryMode"</span> <span class="attr">value</span>=<span class="string">"2"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="发送方接口-ProducerService-java-amp-ProducerServiceImpl-java"><a href="#发送方接口-ProducerService-java-amp-ProducerServiceImpl-java" class="headerlink" title="发送方接口 ProducerService.java &amp; ProducerServiceImpl.java"></a>发送方接口 ProducerService.java &amp; ProducerServiceImpl.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ProducerService</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(Destination destination, <span class="keyword">final</span> String message)</span></span>;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(<span class="keyword">final</span> String message)</span></span>;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Service</span>(<span class="string">"producerService"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProducerServiceImpl</span> <span class="keyword">implements</span> <span class="title">ProducerService</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(Producer.class);</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> JmsTemplate jmsTemplate;</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(Destination destination, <span class="keyword">final</span> String message)</span> </span>&#123;</div><div class="line">        logger.info(<span class="string">"向接收方 &#123;&#125; 发送了消息 &#123;&#125;"</span>, destination, message);</div><div class="line">        jmsTemplate.send(destination, <span class="keyword">new</span> MessageCreator() &#123;</div><div class="line">            <span class="function"><span class="keyword">public</span> Message <span class="title">createMessage</span><span class="params">(Session session)</span> <span class="keyword">throws</span> JMSException </span>&#123;</div><div class="line">                <span class="keyword">return</span> session.createTextMessage(message);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(<span class="keyword">final</span> String message)</span></span>&#123;</div><div class="line">        String destination = jmsTemplate.getDefaultDestination().toString();</div><div class="line">        logger.info(<span class="string">"向默认接收方 &#123;&#125; 发送了消息 &#123;&#125; "</span>, destination, message);</div><div class="line">        jmsTemplate.send(<span class="keyword">new</span> MessageCreator() &#123;</div><div class="line">            <span class="function"><span class="keyword">public</span> Message <span class="title">createMessage</span><span class="params">(Session session)</span> <span class="keyword">throws</span> JMSException </span>&#123;</div><div class="line">                <span class="keyword">return</span> session.createTextMessage(message);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="测试接口"><a href="#测试接口" class="headerlink" title="测试接口"></a>测试接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Autowired</span></div><div class="line">   <span class="keyword">private</span> ProducerService producerService;</div><div class="line"></div><div class="line">   <span class="meta">@Resource</span>(name = <span class="string">"destinationQueue"</span>)</div><div class="line">   <span class="keyword">private</span> Destination destinationQueue;</div><div class="line"></div><div class="line">   <span class="meta">@Resource</span>(name = <span class="string">"destinationTopic"</span>)</div><div class="line">   <span class="keyword">private</span> Destination destinationTopic;</div><div class="line"></div><div class="line">   <span class="meta">@Test</span></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessageTest</span><span class="params">()</span></span>&#123;</div><div class="line">       producerService.sendMessage(destinationQueue, <span class="string">"测试向zpreston-queue发送消息"</span>);</div><div class="line">       producerService.sendMessage(destinationTopic, <span class="string">"测试向zpreston-topic发送消息"</span>);</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p>控制台输出：<br><img src="http://ov0hfjxnq.bkt.clouddn.com/blog/%E5%8F%91%E9%80%81%E6%96%B9%E6%B5%8B%E8%AF%95%E6%8E%A7%E5%88%B6%E5%8F%B0%E7%BB%93%E6%9E%9C.png" alt=""></p>
<p>ActiveMQ管理控制台：<br><img src="http://ov0hfjxnq.bkt.clouddn.com/blog/%E5%8F%91%E9%80%81%E6%96%B9%E6%B5%8B%E8%AF%95%E6%B5%8F%E8%A7%88%E5%99%A8%E6%88%AA%E5%9B%BE-queue.png" alt=""><br><img src="http://ov0hfjxnq.bkt.clouddn.com/blog/%E5%8F%91%E9%80%81%E6%96%B9%E6%B5%8B%E8%AF%95%E6%B5%8F%E8%A7%88%E5%99%A8%E6%88%AA%E5%9B%BE-topic.png" alt=""></p>
<h3 id="接收方"><a href="#接收方" class="headerlink" title="接收方"></a>接收方</h3><p>接收方的配置跟发送方的基本一致，不同的地方在于接收方需要监听消息并消费</p>
<h4 id="添加maven依赖"><a href="#添加maven依赖" class="headerlink" title="添加maven依赖"></a>添加maven依赖</h4><p>同上</p>
<h4 id="配置activeMQ"><a href="#配置activeMQ" class="headerlink" title="配置activeMQ"></a>配置activeMQ</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></div><div class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></div><div class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans</span></span></div><div class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd</span></span></div><div class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></div><div class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context-4.1.xsd"</span></span></div><div class="line"><span class="tag">&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.zpreston.activemq"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jmsFactory"</span> <span class="attr">class</span>=<span class="string">"org.apache.activemq.pool.PooledConnectionFactory"</span></span></div><div class="line"><span class="tag">          <span class="attr">destroy-method</span>=<span class="string">"stop"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connectionFactory"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.apache.activemq.ActiveMQConnectionFactory"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"brokerURL"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>tcp://localhost:61616<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxConnections"</span> <span class="attr">value</span>=<span class="string">"100"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--使用缓存可以提升效率--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"cachingConnectionFactory"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jms.connection.CachingConnectionFactory"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"targetConnectionFactory"</span> <span class="attr">ref</span>=<span class="string">"jmsFactory"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sessionCacheSize"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--点对点模型，即队列，队列名称为zpreston-queue--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"destinationQueue"</span> <span class="attr">class</span>=<span class="string">"org.apache.activemq.command.ActiveMQQueue"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">value</span>=<span class="string">"zpreston-queue"</span>/&gt;</span></div><div class="line">        <span class="comment">&lt;!--&lt;constructor-arg name="name" value="spring-queue"/&gt;--&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--发布者/订阅模型，即主题，主题名称为zpreston-topic--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"destinationTopic"</span> <span class="attr">class</span>=<span class="string">"org.apache.activemq.command.ActiveMQTopic"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">value</span>=<span class="string">"zpreston-topic"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 配置消息消费监听者 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"consumerMessageListener"</span> <span class="attr">class</span>=<span class="string">"com.zpreston.activemq.ConsumerMessageListener"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 消息订阅客户端1 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"consumerListenerClient1"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jms.listener.DefaultMessageListenerContainer"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connectionFactory"</span> <span class="attr">ref</span>=<span class="string">"jmsFactory"</span> /&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 开启订阅模式 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"pubSubDomain"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"destination"</span> <span class="attr">ref</span>=<span class="string">"destinationQueue"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"subscriptionDurable"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">        <span class="comment">&lt;!---这里是设置接收客户端的ID，在持久化时，但这个客户端不在线时，消息就存在数据库里，直到被这个ID的客户端消费掉--&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"clientId"</span> <span class="attr">value</span>=<span class="string">"consumerClient1"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"messageListener"</span> <span class="attr">ref</span>=<span class="string">"consumerMessageListener"</span> /&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 消息应答方式</span></div><div class="line"><span class="comment">             1 Session.AUTO_ACKNOWLEDGE  消息自动签收</span></div><div class="line"><span class="comment">             2 Session.CLIENT_ACKNOWLEDGE  客户端调用acknowledge方法手动签收</span></div><div class="line"><span class="comment">             3 Session.DUPS_OK_ACKNOWLEDGE 不必必须签收，消息可能会重复发送</span></div><div class="line"><span class="comment">        --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sessionAcknowledgeMode"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 消息订阅客户端2 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"consumerListenerClient2"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jms.listener.DefaultMessageListenerContainer"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connectionFactory"</span> <span class="attr">ref</span>=<span class="string">"jmsFactory"</span> /&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 开启订阅模式 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"pubSubDomain"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"destination"</span> <span class="attr">ref</span>=<span class="string">"destinationTopic"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"subscriptionDurable"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">        <span class="comment">&lt;!---这里是设置接收客户端的ID，在持久化时，但这个客户端不在线时，消息就存在数据库里，直到被这个ID的客户端消费掉--&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"clientId"</span> <span class="attr">value</span>=<span class="string">"consumerClient2"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"messageListener"</span> <span class="attr">ref</span>=<span class="string">"consumerMessageListener"</span> /&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 消息应答方式</span></div><div class="line"><span class="comment">             1 Session.AUTO_ACKNOWLEDGE  消息自动签收</span></div><div class="line"><span class="comment">             2 Session.CLIENT_ACKNOWLEDGE  客户端调用acknowledge方法手动签收</span></div><div class="line"><span class="comment">             3 Session.DUPS_OK_ACKNOWLEDGE 不必必须签收，消息可能会重复发送</span></div><div class="line"><span class="comment">        --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sessionAcknowledgeMode"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="创建消息监听器-ConsumerMessageListener-java"><a href="#创建消息监听器-ConsumerMessageListener-java" class="headerlink" title="创建消息监听器 ConsumerMessageListener.java"></a>创建消息监听器 ConsumerMessageListener.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerMessageListener</span> <span class="keyword">implements</span> <span class="title">MessageListener</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(Message message)</span> </span>&#123;</div><div class="line">        TextMessage tm = (TextMessage) message;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            System.out.println(<span class="string">"---------接收方接收消息---------"</span>);</div><div class="line">            System.out.println(<span class="string">"消息内容:\t"</span> + tm.getText());</div><div class="line">            System.out.println(<span class="string">"消息ID:\t"</span> + tm.getJMSMessageID());</div><div class="line">            System.out.println(<span class="string">"消息Destination:\t"</span> + tm.getJMSDestination());</div><div class="line">            System.out.println(<span class="string">"-------------------------"</span>);</div><div class="line">        &#125; <span class="keyword">catch</span> (JMSException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h4><p>控制台输出：<br><img src="http://ov0hfjxnq.bkt.clouddn.com/blog/%E6%8E%A5%E6%94%B6%E6%96%B9%E6%B5%8B%E8%AF%95%E6%8E%A7%E5%88%B6%E5%8F%B0%E7%BB%93%E6%9E%9C.png" alt=""></p>
<p>ActiveMQ管理控制台：<br><img src="http://ov0hfjxnq.bkt.clouddn.com/blog/%E6%8E%A5%E6%94%B6%E6%96%B9%E6%B5%8B%E8%AF%95%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BB%93%E6%9E%9C-queue.png" alt=""></p>
<p><img src="http://ov0hfjxnq.bkt.clouddn.com/blog/%E6%8E%A5%E6%94%B6%E6%96%B9%E6%B5%8B%E8%AF%95%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BB%93%E6%9E%9C-topic.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;异步消息通信是指一个应用程序向另一个应用程序间接发送消息的一种方式，这种不同于同步消息，异步消息无需等待对方的响应，不会阻塞当前程序。&lt;/p&gt;
&lt;h3 id=&quot;异步消息的两个主要概念&quot;&gt;&lt;a href=&quot;#异步消息的两个主要概念&quot; class=&quot;headerlink&quot; ti
    
    </summary>
    
      <category term="JavaWeb" scheme="http://www.zpreston.top/categories/JavaWeb/"/>
    
    
      <category term="spring" scheme="http://www.zpreston.top/tags/spring/"/>
    
      <category term="ActiveMQ" scheme="http://www.zpreston.top/tags/ActiveMQ/"/>
    
      <category term="异步" scheme="http://www.zpreston.top/tags/%E5%BC%82%E6%AD%A5/"/>
    
      <category term="消息通信" scheme="http://www.zpreston.top/tags/%E6%B6%88%E6%81%AF%E9%80%9A%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>redis踩坑</title>
    <link href="http://www.zpreston.top/articles/efa1fd1f/"/>
    <id>http://www.zpreston.top/articles/efa1fd1f/</id>
    <published>2017-11-21T09:57:21.000Z</published>
    <updated>2017-11-22T07:49:48.601Z</updated>
    
    <content type="html"><![CDATA[<p>redis为我们提供了String字符串，List列表，无序集Set，有序集ZSet和哈希Hash值的存储，根据业务逻辑及场景的不同需要选择适当的值类型进行存储。之前在迭代一个项目的时候发现，项目中在redis中用List类型存储了一部分的用户信息，接手的时候发现了一个问题。按道理，在第一次获取到这一部分信息后，系统会在redis中缓存这部分数据，之后从redis请求会比直接从数据库中拉取要快。但是实际上每次获取这部分数据，耗费的时间总是差不多的，大概在180ms左右。查看了一下返回的数据，发现只有400条左右的用户信息。查询400条用户信息用了180ms，实际上是有点多了，意识到这个问题需要优化后，我对相关的代码进行了研究。最终的结果发现，项目中使用了redis的List类型来存储这部分用户信息，一行代表一个用户数据，但是跟前端交互则是使用json，返回数据时将List数据转换成json串再传给前端。第一次获取数据时redis确实缓存了这部分数据，第二次访问这部分数据时redis同样会返回，但是返回后redis就把这部分数据删了。第三次查询发现redis没有这部分数据，系统又从数据库中获取然后添加到redis中，所以导致响应时间变得比较长。</p>
<a id="more"></a>
<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>想了一下其实redis处理这部分数据时使用List值类型存储完全没有必要。需要缓存的这部分数据其实就是后台返回前端的数据，而前后端交互使用json，完全可以先将这部分List数据转换成json数据后缓存到redis中，之后再次请求时直接从redis获取到缓存的json数据后返回给前端，省下了将List数据转换成json串的时间。</p>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>不过，redis在List数据被访问后会将该数据删除，String值类型的数据则不会有此情况。是为什么呢？</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;redis为我们提供了String字符串，List列表，无序集Set，有序集ZSet和哈希Hash值的存储，根据业务逻辑及场景的不同需要选择适当的值类型进行存储。之前在迭代一个项目的时候发现，项目中在redis中用List类型存储了一部分的用户信息，接手的时候发现了一个问题。按道理，在第一次获取到这一部分信息后，系统会在redis中缓存这部分数据，之后从redis请求会比直接从数据库中拉取要快。但是实际上每次获取这部分数据，耗费的时间总是差不多的，大概在180ms左右。查看了一下返回的数据，发现只有400条左右的用户信息。查询400条用户信息用了180ms，实际上是有点多了，意识到这个问题需要优化后，我对相关的代码进行了研究。最终的结果发现，项目中使用了redis的List类型来存储这部分用户信息，一行代表一个用户数据，但是跟前端交互则是使用json，返回数据时将List数据转换成json串再传给前端。第一次获取数据时redis确实缓存了这部分数据，第二次访问这部分数据时redis同样会返回，但是返回后redis就把这部分数据删了。第三次查询发现redis没有这部分数据，系统又从数据库中获取然后添加到redis中，所以导致响应时间变得比较长。&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="http://www.zpreston.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="redis" scheme="http://www.zpreston.top/tags/redis/"/>
    
      <category term="踩坑" scheme="http://www.zpreston.top/tags/%E8%B8%A9%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>spring面向切面编程</title>
    <link href="http://www.zpreston.top/articles/9dd13be5/"/>
    <id>http://www.zpreston.top/articles/9dd13be5/</id>
    <published>2017-11-20T07:27:54.000Z</published>
    <updated>2017-11-20T09:48:43.737Z</updated>
    
    <content type="html"><![CDATA[<p>在软件开发中，散布于应用中多处的功能被称为横切关注点，这些横切关注点从概念上是与应用的业务逻辑相分离的，面向切面编程(AOP)所要解决的问题就是把这些横切关注点与业务逻辑相分离。</p>
<a id="more"></a>
<h3 id="面向切面编程"><a href="#面向切面编程" class="headerlink" title="面向切面编程"></a>面向切面编程</h3><p>在实际编程中，如果要重用通用功能的话，最常见的面向对象的技术是继承或委托。但是，如果在整个应用中都使用相同的基类，继承往往会导致一个脆弱的对象体系，而使用委托可能需要对委托对象进行复杂的调用。<br>在使用面向切面编程时，我们仍然可以在一个地方定义通用功能，但是可以通过声明的方式定义这个功能要以何种方式在何处应用，而无需修改受影响的类。横切关注点可以被模块化为特殊的类，这些类就被称为切面。<br>web应用中遍布整个应用的通用功能之一就是日志，接下来在spring应用中通过切面完成通用的日志功能——在每一个request执行前先打印请求的相关信息，然后再执行业务代码，执行完成后打印返回的结果。在应用部署上线后，可以通过日志排除故障范围。</p>
<h3 id="AOP的三个最重要术语"><a href="#AOP的三个最重要术语" class="headerlink" title="AOP的三个最重要术语"></a>AOP的三个最重要术语</h3><ol>
<li>通知<br>通知即切面的具体工作，定义了切面是什么以及何时使用，除了描述切面要完成的工作，还解决了何时执行这个工作的问题。spring切面可以应用5种类型的通知</li>
</ol>
<ul>
<li>前置通知：在目标方法被调用前调用通知功能</li>
<li>后置通知：在目标方法完成之后调用通知，此时不会关心方法的输出是什么</li>
<li>返回通知：在目标方法成功执行后调用通知</li>
<li>异常通知：在目标方法抛出异常后调用通知</li>
<li>环绕通知：通知包裹了被通知的方法，被通知的方法调用之前和调用之后执行自定义的行为</li>
</ul>
<ol>
<li><p>切点<br>通知定义了切面在“何时”工作，切点则定义了切面在“何处”工作，切点会匹配通知，指定一个或多个连接点使用切面。</p>
</li>
<li><p>切面<br>切面是切点和通知的结合，通知和切点共同定义了切面的全部内容——它是什么，在何时和何处完成其功能。</p>
</li>
</ol>
<h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><h3 id="maven添加依赖-pom-xml"><a href="#maven添加依赖-pom-xml" class="headerlink" title="maven添加依赖 pom.xml"></a>maven添加依赖 pom.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- cglib动态代理 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- AspectJ包 使用Spring的aop时需要使用到aspectjrt包 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjrt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!--aspectjweaver包 使用Spring的aop时需要使用到aspectjweaver包 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="spring配置aop切面-spring-aop-xml"><a href="#spring配置aop切面-spring-aop-xml" class="headerlink" title="spring配置aop切面 spring-aop.xml"></a>spring配置aop切面 spring-aop.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></div><div class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></div><div class="line"><span class="tag"><span class="string">  http://www.springframework.org/schema/beans</span></span></div><div class="line"><span class="tag"><span class="string">  http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></div><div class="line"><span class="tag"><span class="string">  http://www.springframework.org/schema/aop</span></span></div><div class="line"><span class="tag"><span class="string">  http://www.springframework.org/schema/aop/spring-aop.xsd"</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- aop注解支持 使用cglib 不使用java动态代理--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> <span class="attr">proxy-target-class</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:aspectj-autoproxy</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.zpreston.util.log.RequestLog"</span> <span class="attr">id</span>=<span class="string">"requestLog"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="定义切面"><a href="#定义切面" class="headerlink" title="定义切面"></a>定义切面</h3><p>spring使用AspectJ注解来通知声明方法，AspectJ提供了5个注解来定义通知，对应前面说到的5种通知类型</p>
<ul>
<li>@After 通知方法会在目标方法返回或抛出异常后调用</li>
<li>@AfterReturning 通知方法会在目标方法返回后调用</li>
<li>@AfterThrowing 通知方法会在目标方法抛出异常后调用</li>
<li>@Around 通知方法会将目标方法封装起来</li>
<li>@Before 通知方法会在目标方法调用之前执行</li>
</ul>
<p>需要注意的是@Around注解的环绕通知，她接受了一个ProceedingJoinPoint作为参数，该参数是用来在通知中调用被通知的方法。<br>具体做法是当要将控制权交给被通知的方法时，调用ProceedingJoinPoint方法。如果不调用该方法的话，通知会阻塞对被通知方法的调用。</p>
<h4 id="创建日志切面-RequestLog-java"><a href="#创建日志切面-RequestLog-java" class="headerlink" title="创建日志切面 RequestLog.java"></a>创建日志切面 RequestLog.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Aspect</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestLog</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(RequestLog.class);</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">boolean</span> DEBUG_REQUEST = <span class="keyword">true</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">boolean</span> DEBUG_RESPONSE = <span class="keyword">false</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RequestLog</span><span class="params">()</span></span>&#123;</div><div class="line">        logger.info(<span class="string">"RequestLog init..."</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//Around定义环绕通知</span></div><div class="line">    <span class="comment">//execution定义切点，表示controller包下所有方法执行时都调用通知</span></div><div class="line">    <span class="meta">@Around</span>(<span class="string">"execution(* com.zpreston.controller..*.*(..))"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">logForRequest</span><span class="params">(ProceedingJoinPoint pjp)</span> <span class="keyword">throws</span> Throwable</span>&#123;</div><div class="line">        logger.debug(<span class="string">"=============RequestLog start=================="</span>);</div><div class="line"></div><div class="line">        <span class="keyword">long</span>  param_start = System.currentTimeMillis();</div><div class="line">        String className = pjp.getTarget().getClass().getName();</div><div class="line">        String methodName = pjp.getSignature().getName();</div><div class="line"></div><div class="line">        <span class="comment">//记录请求</span></div><div class="line">        <span class="keyword">if</span>(DEBUG_REQUEST)&#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                logger.info(<span class="string">"****************打印请求*******************"</span>);</div><div class="line">                HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();</div><div class="line">                logger.info(<span class="string">"TimeStamp-时间戳:&#123;&#125;"</span>, DateTime.now().toString(<span class="string">"YY-MM-dd HH:mm:ss"</span>));</div><div class="line">                logger.info(<span class="string">"Class-请求的方法:&#123;&#125;"</span>,(className + <span class="string">"."</span> + methodName + <span class="string">"()"</span>));</div><div class="line">                <span class="keyword">if</span>(request.getMethod().equals(<span class="string">"GET"</span>))&#123;</div><div class="line">                    logger.info(<span class="string">"Url-请求的路径:&#123;&#125;"</span>,request.getRequestURL().append((request.getQueryString() == <span class="keyword">null</span> ?<span class="string">""</span>:<span class="string">"?"</span>+request.getQueryString())));</div><div class="line">                    logger.info(<span class="string">"Method-请求的方式:GET"</span>);</div><div class="line">                    logger.info(<span class="string">"Content-Type-数据格式:&#123;&#125;"</span>,request.getHeader(<span class="string">"Content-Type"</span>));</div><div class="line">                    Enumeration enumeration =  request.getParameterNames();</div><div class="line">                    <span class="keyword">while</span> (enumeration.hasMoreElements())&#123;</div><div class="line">                        String name = (String)enumeration.nextElement();</div><div class="line">                        String value = request.getParameter(name);</div><div class="line">                        logger.info(<span class="string">"Params-参数(form表单) ----key:&#123;&#125;----value:&#123;&#125;"</span>,name,value);</div><div class="line">                    &#125;</div><div class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(request.getMethod().equals(<span class="string">"POST"</span>))&#123;</div><div class="line">                    logger.info(<span class="string">"Url-请求的路径:&#123;&#125;"</span>,request.getRequestURL().append((request.getQueryString() == <span class="keyword">null</span> ?<span class="string">""</span>:<span class="string">"?"</span>+request.getQueryString())));</div><div class="line">                    logger.info(<span class="string">"Method-请求的方式:POST"</span>);</div><div class="line">                    logger.info(<span class="string">"Content-Type-数据格式:&#123;&#125;"</span>,request.getHeader(<span class="string">"Content-Type"</span>));</div><div class="line"></div><div class="line">                    <span class="keyword">if</span>(request.getHeader(<span class="string">"Content-Type"</span>).contains(<span class="string">"json"</span>))&#123;</div><div class="line">                        Object[] args = pjp.getArgs();</div><div class="line">                        logger.info(<span class="string">"Params-参数(JSON):&#123;&#125;"</span>, <span class="keyword">new</span> Gson().toJson(args));</div><div class="line">                    &#125;<span class="keyword">else</span>&#123;</div><div class="line">                        Enumeration enumeration =  request.getParameterNames();</div><div class="line">                        <span class="keyword">while</span> (enumeration.hasMoreElements())&#123;</div><div class="line">                            String name = (String)enumeration.nextElement();</div><div class="line">                            String value = request.getParameter(name);</div><div class="line">                            logger.info(<span class="string">"Params-参数(form表单) ----key:&#123;&#125;----value:&#123;&#125;"</span>,name,value);</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;<span class="keyword">else</span>&#123;</div><div class="line">                    logger.info(<span class="string">"Method-请求的方式(非GET/POST,不解析请求参数):&#123;&#125;"</span>,request.getMethod());</div><div class="line"></div><div class="line">                &#125;</div><div class="line">            &#125;<span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                <span class="comment">//记录本地异常日志</span></div><div class="line">                logger.error(<span class="string">"==logger Dog  Watching  获取参数  Exception=="</span>);</div><div class="line">                logger.error(<span class="string">"异常栈:&#123;&#125;"</span>,e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">long</span> param_end = System.currentTimeMillis();</div><div class="line">            logger.info(<span class="string">"****************打印请求  花费时间*******************&#123;&#125;ms"</span>,(param_end-param_start));</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">//执行</span></div><div class="line">        <span class="keyword">long</span> start_excute = System.currentTimeMillis();</div><div class="line">        logger.info(<span class="string">"****************业务代码执行*******************"</span>);</div><div class="line">        Object response = pjp.proceed();</div><div class="line">        <span class="comment">//统计耗时</span></div><div class="line">        <span class="keyword">long</span> end_excute = System.currentTimeMillis();</div><div class="line">        logger.info(<span class="string">"****************&#123;&#125;.&#123;&#125;() 业务代码执行   花费时间ms****************&#123;&#125;ms"</span>,className,methodName,(end_excute - start_excute));</div><div class="line"></div><div class="line">        <span class="comment">//记录返回</span></div><div class="line">        <span class="keyword">if</span>(DEBUG_RESPONSE)&#123;</div><div class="line">            <span class="keyword">long</span> ret_start = System.currentTimeMillis();</div><div class="line">            logger.info(<span class="string">"****************打印返回*******************"</span>);</div><div class="line">            logger.info(<span class="string">"返回数据(JSON格式):"</span>+ <span class="keyword">new</span> Gson().toJson(response));</div><div class="line">            <span class="keyword">long</span> ret_end = System.currentTimeMillis();</div><div class="line">            logger.info(<span class="string">"****************打印返回  花费时间ms*******************&#123;&#125;ms"</span>,(ret_end-ret_start));</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        logger.debug(<span class="string">"=============RequestLog end=================="</span>);</div><div class="line"></div><div class="line">        <span class="keyword">return</span> response;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在软件开发中，散布于应用中多处的功能被称为横切关注点，这些横切关注点从概念上是与应用的业务逻辑相分离的，面向切面编程(AOP)所要解决的问题就是把这些横切关注点与业务逻辑相分离。&lt;/p&gt;
    
    </summary>
    
      <category term="JavaWeb" scheme="http://www.zpreston.top/categories/JavaWeb/"/>
    
    
      <category term="spring" scheme="http://www.zpreston.top/tags/spring/"/>
    
      <category term="aop" scheme="http://www.zpreston.top/tags/aop/"/>
    
      <category term="面向切面" scheme="http://www.zpreston.top/tags/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2/"/>
    
  </entry>
  
  <entry>
    <title>spring定时发送邮件</title>
    <link href="http://www.zpreston.top/articles/e3d30280/"/>
    <id>http://www.zpreston.top/articles/e3d30280/</id>
    <published>2017-11-14T07:17:53.000Z</published>
    <updated>2017-11-14T09:16:12.675Z</updated>
    
    <content type="html"><![CDATA[<p>前面的博文<a href="https://zprestonx.github.io/posts/5585512f/" title="spring发送邮件" target="_blank" rel="external">spring发送邮件</a>中介绍了spring如何发送邮件，今天介绍一个定时任务组件quartz，并利用quartz实现定时发送邮件的功能。<br>其实spring自带了一个任务组件Task，利用spring自带的Task也能实现定时任务，但在我的实际项目中，Task不如quartz灵活，无法满足项目的需求，所以我放弃了使用Task的打算。有兴趣的可以自己去了解下。</p>
<a id="more"></a>
<h3 id="添加quartz依赖-pom-xml"><a href="#添加quartz依赖-pom-xml" class="headerlink" title="添加quartz依赖 pom.xml"></a>添加quartz依赖 pom.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="定义所有任务的父类ScheduleJob-java"><a href="#定义所有任务的父类ScheduleJob-java" class="headerlink" title="定义所有任务的父类ScheduleJob.java"></a>定义所有任务的父类ScheduleJob.java</h3><h4 id="其中cronExpression成员代表任务触发的时间，由一个cron表达式组成，cron表达式的相关语法请自行百度"><a href="#其中cronExpression成员代表任务触发的时间，由一个cron表达式组成，cron表达式的相关语法请自行百度" class="headerlink" title="其中cronExpression成员代表任务触发的时间，由一个cron表达式组成，cron表达式的相关语法请自行百度"></a>其中cronExpression成员代表任务触发的时间，由一个cron表达式组成，cron表达式的相关语法请自行百度</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScheduleJob</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String jobName;</div><div class="line">    <span class="keyword">private</span> String jobGroup;</div><div class="line">    <span class="keyword">private</span> String cronExpression;</div><div class="line">    <span class="keyword">private</span> String taskPackageClassName;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getJobName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> jobName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJobName</span><span class="params">(String jobName)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.jobName = jobName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getJobGroup</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> jobGroup;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJobGroup</span><span class="params">(String jobGroup)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.jobGroup = jobGroup;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCronExpression</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> cronExpression;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCronExpression</span><span class="params">(String cronExpression)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.cronExpression = cronExpression;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTaskPackageClassName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> taskPackageClassName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTaskPackageClassName</span><span class="params">(String taskPackageClassName)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.taskPackageClassName = taskPackageClassName;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="定义邮件任务类，继承任务父类EmailScheduleJob-java"><a href="#定义邮件任务类，继承任务父类EmailScheduleJob-java" class="headerlink" title="定义邮件任务类，继承任务父类EmailScheduleJob.java"></a>定义邮件任务类，继承任务父类EmailScheduleJob.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmailScheduleJob</span> <span class="keyword">extends</span> <span class="title">ScheduleJob</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">//邮件任务类的唯一标识</span></div><div class="line">    <span class="keyword">private</span> String emailTaskId;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmailTaskId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> emailTaskId;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmailTaskId</span><span class="params">(String emailTaskId)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.emailTaskId = emailTaskId;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="定时邮件任务工具类-EmailSchedule-java"><a href="#定时邮件任务工具类-EmailSchedule-java" class="headerlink" title="定时邮件任务工具类 EmailSchedule.java"></a>定时邮件任务工具类 EmailSchedule.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Service</span>(<span class="string">"emailSchedule"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmailSchedule</span> <span class="keyword">implements</span> <span class="title">Job</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(EmailSchedule.class);</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String EMAIL_JOB_GROUP = <span class="string">"email_job_group"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String TASK_PACKAGE_CLASS_NAME = <span class="string">"com.zpreston.service.serviceImpl.EmailSchedule"</span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 重启服务器时需要重新查询任务并加入</span></div><div class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="meta">@PostConstruct</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</div><div class="line">        <span class="comment">//从数据源中获取相关数据生成定时任务并重新加入</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(JobExecutionContext jobExecutionContext)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</div><div class="line">        ScheduleJob scheduleJob = (ScheduleJob) jobExecutionContext.getMergedJobDataMap().get(<span class="string">"scheduleJob"</span>);</div><div class="line">        doSendEmailTask(scheduleJob);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 发送邮件任务</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> scheduleJob 定时任务</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doSendEmailTask</span><span class="params">(ScheduleJob scheduleJob)</span></span>&#123;</div><div class="line">        String id = ((EmailScheduleJob)scheduleJob).getEmailTaskId();</div><div class="line">        Map&lt;String, Object&gt; emailInfo = getEmailInfo(id);</div><div class="line">        <span class="comment">//根据emailInfo发送具体的邮件</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 获取需要发送邮件的相关信息，并生成相应的邮件任务</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getEmailInfo</span><span class="params">(String id)</span></span>&#123;</div><div class="line">        <span class="comment">//根据邮件任务的唯一标识id从数据源中获取需要发送邮件的任务</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 添加邮件任务</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> taskId 邮件任务id</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> time 发送时间</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addEmailTask</span><span class="params">(String taskId, String time)</span></span>&#123;</div><div class="line">        String cronExpression = convertTime2cronExp(time);</div><div class="line">        ScheduleJobManager scheduleJobManager = <span class="keyword">new</span> ScheduleJobManager();</div><div class="line">        EmailScheduleJob emailScheduleJob = <span class="keyword">new</span> EmailScheduleJob();</div><div class="line">        emailScheduleJob.setEmailTaskId(taskId);</div><div class="line">        emailScheduleJob.setJobName(taskId);</div><div class="line">        emailScheduleJob.setJobGroup(EMAIL_JOB_GROUP);</div><div class="line">        emailScheduleJob.setTaskPackageClassName(TASK_PACKAGE_CLASS_NAME);</div><div class="line">        emailScheduleJob.setCronExpression(cronExpression);</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            scheduleJobManager.addJob(emailScheduleJob);</div><div class="line">            logger.info(<span class="string">"新增邮件任务：id-&gt;"</span> + taskId + <span class="string">" 时间-&gt;"</span> + cronExpression);</div><div class="line">        &#125;<span class="keyword">catch</span>(SchedulerException e)&#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;<span class="keyword">catch</span>(ClassNotFoundException e)&#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 删除邮件任务</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> taskId 邮件任务id</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteEmailTask</span><span class="params">(String taskId)</span></span>&#123;</div><div class="line">        ScheduleJobManager scheduleJobManager = <span class="keyword">new</span> ScheduleJobManager();</div><div class="line">        ScheduleJob scheduleJob = <span class="keyword">new</span> ScheduleJob();</div><div class="line">        scheduleJob.setJobName(taskId);</div><div class="line">        scheduleJob.setJobGroup(EMAIL_JOB_GROUP);</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            scheduleJobManager.deleteJob(scheduleJob);</div><div class="line">        &#125;<span class="keyword">catch</span>(SchedulerException e)&#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 将时间转换成cron表达式，用于定时任务的触发时间</span></div><div class="line"><span class="comment">     * spring4.x不允许cron表达式有7个参数，只能为6个，故该函数只适合spring3.x及以下版本</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> time 发送时间</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span> 包含7个参数的cron表达式</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">convertTime2cronExp</span><span class="params">(String time)</span></span>&#123;</div><div class="line">        StringBuilder cronExp = <span class="keyword">new</span> StringBuilder();</div><div class="line">        String[] times = time.split(<span class="string">" "</span>);</div><div class="line">        String[] t1 = times[<span class="number">0</span>].split(<span class="string">"-"</span>);</div><div class="line">        String[] t2 = times[<span class="number">1</span>].split(<span class="string">":"</span>);</div><div class="line">        cronExp.append(t2[<span class="number">2</span>]).append(<span class="string">" "</span>).append(t2[<span class="number">1</span>]).append(<span class="string">" "</span>)</div><div class="line">                .append(t2[<span class="number">0</span>]).append(<span class="string">" "</span>).append(t1[<span class="number">2</span>]).append(<span class="string">" "</span>)</div><div class="line">                .append(t1[<span class="number">1</span>]).append(<span class="string">" ? "</span>).append(t1[<span class="number">0</span>]);</div><div class="line">        <span class="keyword">return</span> cronExp.toString();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="由于quartz中的Job（任务）是在quartz中注入的，要想在spring中的service层使用我们定义的邮件任务类EmailSchedule，需要自定义Job的创建逻辑"><a href="#由于quartz中的Job（任务）是在quartz中注入的，要想在spring中的service层使用我们定义的邮件任务类EmailSchedule，需要自定义Job的创建逻辑" class="headerlink" title="由于quartz中的Job（任务）是在quartz中注入的，要想在spring中的service层使用我们定义的邮件任务类EmailSchedule，需要自定义Job的创建逻辑"></a>由于quartz中的Job（任务）是在quartz中注入的，要想在spring中的service层使用我们定义的邮件任务类EmailSchedule，需要自定义Job的创建逻辑</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JobFactory</span> <span class="keyword">extends</span> <span class="title">AdaptableJobFactory</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> AutowireCapableBeanFactory autowireCapableBeanFactory;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> Object <span class="title">createJobInstance</span><span class="params">(TriggerFiredBundle bundle)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        Object jobInstance = <span class="keyword">super</span>.createJobInstance(bundle);</div><div class="line">        autowireCapableBeanFactory.autowireBean(jobInstance);</div><div class="line">        <span class="keyword">return</span> jobInstance;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="把自定义的任务工厂类JobFactory配置到quartz中"><a href="#把自定义的任务工厂类JobFactory配置到quartz中" class="headerlink" title="把自定义的任务工厂类JobFactory配置到quartz中"></a>把自定义的任务工厂类JobFactory配置到quartz中</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"schedulerFactoryBean"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.SchedulerFactoryBean"</span> <span class="attr">autowire</span>=<span class="string">"no"</span> <span class="attr">lazy-init</span>=<span class="string">"false"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobFactory"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.zpreston.service.serviceImpl.JobFactory"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addEmailTaskTest</span><span class="params">()</span></span>&#123;</div><div class="line">    emailSchedule.addEmailTask(<span class="string">"1"</span>, <span class="string">"2017-11-14 17:00:00"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><img src="http://ov0hfjxnq.bkt.clouddn.com/blog/%E7%BB%93%E6%9E%9C.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前面的博文&lt;a href=&quot;https://zprestonx.github.io/posts/5585512f/&quot; title=&quot;spring发送邮件&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;spring发送邮件&lt;/a&gt;中介绍了spring如何发送邮件，今天介绍一个定时任务组件quartz，并利用quartz实现定时发送邮件的功能。&lt;br&gt;其实spring自带了一个任务组件Task，利用spring自带的Task也能实现定时任务，但在我的实际项目中，Task不如quartz灵活，无法满足项目的需求，所以我放弃了使用Task的打算。有兴趣的可以自己去了解下。&lt;/p&gt;
    
    </summary>
    
      <category term="JavaWeb" scheme="http://www.zpreston.top/categories/JavaWeb/"/>
    
    
      <category term="spring" scheme="http://www.zpreston.top/tags/spring/"/>
    
      <category term="quartz" scheme="http://www.zpreston.top/tags/quartz/"/>
    
      <category term="定时任务" scheme="http://www.zpreston.top/tags/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>spring发送邮件</title>
    <link href="http://www.zpreston.top/articles/5585512f/"/>
    <id>http://www.zpreston.top/articles/5585512f/</id>
    <published>2017-11-01T08:48:44.000Z</published>
    <updated>2017-11-14T07:37:00.756Z</updated>
    
    <content type="html"><![CDATA[<p>最近刚把手上的项目忙完，趁着手头还有些空闲时间，把项目中值得记录和分享的东西写出来，今天先分享一下spring发送邮件的具体实现。</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>要想发送邮件，肯定先要有一个邮件发送方，项目中用到的是公司的企业邮箱，如果没有的话可以使用自己的qq邮箱或者其他邮箱，只不过要先开启SMTP服务，具体方法自查哈~邮件接收方那就随意写了……</p>
<a id="more"></a>
<h2 id="邮件工具类配置文件email-properties"><a href="#邮件工具类配置文件email-properties" class="headerlink" title="邮件工具类配置文件email.properties"></a>邮件工具类配置文件email.properties</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#邮件服务器</div><div class="line">email_host=smtp.exmail.qq.com</div><div class="line">#邮件协议</div><div class="line">email_protocol=smtp</div><div class="line">#端口号</div><div class="line">email_port=587</div><div class="line">#发送者</div><div class="line">email_sender=XXX</div><div class="line">#用户名(若使用个人qq邮箱，用户名为qq号)</div><div class="line">email_username=XXX</div><div class="line">#密码(若使用个人邮箱，密码则为设置SMTP服务后的授权码)</div><div class="line">email_password=XXX</div></pre></td></tr></table></figure>
<h2 id="读取配置文件工具类PropertiesUtil-java"><a href="#读取配置文件工具类PropertiesUtil-java" class="headerlink" title="读取配置文件工具类PropertiesUtil.java"></a>读取配置文件工具类PropertiesUtil.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PropertiesUtil</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String email_properties = <span class="string">"email.properties"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Properties prop = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> HashMap&lt;String, String&gt; param = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 获取email.properties配置文件中的属性值</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> key 属性</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span> 属性对应的值</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getEmailValue</span><span class="params">(String key)</span></span>&#123;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">null</span> == key)&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">null</span> == prop)&#123;</div><div class="line">            Resource resource = <span class="keyword">new</span> ClassPathResource(email_properties);</div><div class="line">            <span class="keyword">try</span>&#123;</div><div class="line">                prop = PropertiesLoaderUtils.loadProperties(resource);</div><div class="line">            &#125;<span class="keyword">catch</span> (Exception e)&#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">            param = <span class="keyword">new</span> HashMap&lt;String, String&gt;((Map)prop);</div><div class="line">        &#125;</div><div class="line">        String value = param.get(key);</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">null</span> == value)&#123;</div><div class="line">            <span class="keyword">try</span>&#123;</div><div class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchPropertyException(email_properties + <span class="string">"文件中找不到属性-&gt;"</span> + key);</div><div class="line">            &#125;<span class="keyword">catch</span>(NoSuchPropertyException e)&#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> value;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="发送邮件工具类EmailUtil-java"><a href="#发送邮件工具类EmailUtil-java" class="headerlink" title="发送邮件工具类EmailUtil.java"></a>发送邮件工具类EmailUtil.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmailUtil</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String host = PropertiesUtil.getEmailValue(<span class="string">"email_host"</span>);</div><div class="line">    <span class="keyword">private</span> String protocol = PropertiesUtil.getEmailValue(<span class="string">"email_protocol"</span>);</div><div class="line">    <span class="keyword">private</span> String port = PropertiesUtil.getEmailValue(<span class="string">"email_port"</span>);</div><div class="line">    <span class="keyword">private</span> String sender = PropertiesUtil.getEmailValue(<span class="string">"email_sender"</span>);</div><div class="line">    <span class="keyword">private</span> String username = PropertiesUtil.getEmailValue(<span class="string">"email_username"</span>);</div><div class="line">    <span class="keyword">private</span> String password = PropertiesUtil.getEmailValue(<span class="string">"email_password"</span>);</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SENDER_NAME = <span class="string">"XXX"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CONTENT_TYPE = <span class="string">"text/html;charset=GBK"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JavaMailSenderImpl javaMailSender;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Properties props;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 初始化邮件工具</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EmailUtil</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">null</span> == javaMailSender)&#123;</div><div class="line">            javaMailSender = <span class="keyword">new</span> JavaMailSenderImpl();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">null</span> == props)&#123;</div><div class="line">            props = <span class="keyword">new</span> Properties();</div><div class="line">        &#125;</div><div class="line">        javaMailSender.setHost(host);</div><div class="line">        props.put(<span class="string">"mail.transport.protocol"</span>, protocol);</div><div class="line">        props.put(<span class="string">"mail.smtp.host"</span>, host);</div><div class="line">        props.put(<span class="string">"mail.smtp.auth"</span>, <span class="string">"true"</span>);</div><div class="line">        props.put(<span class="string">"mail.smtp.port"</span>, port);</div><div class="line">        props.put(<span class="string">"mail.smtp.timeout"</span>, <span class="string">"20000"</span>);</div><div class="line">        javaMailSender.setJavaMailProperties(props);</div><div class="line">        javaMailSender.setUsername(username);</div><div class="line">        javaMailSender.setPassword(password);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 单发邮件</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> recipient 收件人</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> subject 邮件主题</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> content 邮件内容</span></div><div class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send</span><span class="params">(String recipient, String subject, String content)</span> <span class="keyword">throws</span> Exception</span>&#123;</div><div class="line">        MimeMessage mimeMessage = javaMailSender.createMimeMessage();</div><div class="line">        mimeMessage.setFrom(<span class="keyword">new</span> InternetAddress(sender, SENDER_NAME));</div><div class="line">        mimeMessage.setRecipients(Message.RecipientType.TO, InternetAddress.parse(recipient));</div><div class="line">        mimeMessage.setSubject(subject);</div><div class="line">        mimeMessage.setSentDate(<span class="keyword">new</span> Date());</div><div class="line">        mimeMessage.setContent(content, CONTENT_TYPE);</div><div class="line">        javaMailSender.send(mimeMessage);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 群发邮件</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> recipients 收件人列表</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> subject 邮件主题</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> content 邮件内容</span></div><div class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send</span><span class="params">(List&lt;String&gt; recipients, String subject, String content)</span> <span class="keyword">throws</span> Exception</span>&#123;</div><div class="line">        MimeMessage mimeMessage = javaMailSender.createMimeMessage();</div><div class="line">        mimeMessage.setFrom(<span class="keyword">new</span> InternetAddress(sender, SENDER_NAME));</div><div class="line">        <span class="keyword">int</span> count = recipients.size();</div><div class="line">        InternetAddress[] addresses = <span class="keyword">new</span> InternetAddress[count];</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i &lt; count; i++)&#123;</div><div class="line">            addresses[i] = <span class="keyword">new</span> InternetAddress(recipients.get(i));</div><div class="line">        &#125;</div><div class="line">        mimeMessage.setRecipients(Message.RecipientType.TO, addresses);</div><div class="line">        mimeMessage.setSubject(subject);</div><div class="line">        mimeMessage.setSentDate(<span class="keyword">new</span> Date());</div><div class="line">        mimeMessage.setContent(content, CONTENT_TYPE);</div><div class="line">        javaMailSender.send(mimeMessage);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 异步方式单发邮件</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> recipient 收件人</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> subject 邮件主题</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> content 邮件内容</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendByAsynchronous</span><span class="params">(<span class="keyword">final</span> String recipient, <span class="keyword">final</span> String subject, <span class="keyword">final</span> String content)</span></span>&#123;</div><div class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="keyword">try</span>&#123;</div><div class="line">                    send(recipient, subject, content);</div><div class="line">                &#125;<span class="keyword">catch</span>(Exception e)&#123;</div><div class="line">                    System.out.println(<span class="string">"send single email by asynchronous fail!"</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;).start();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 异步方式群发邮件</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> recipients 收件人列表</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> subject 邮件主题</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> content 邮件内容</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendByAsynchronous</span><span class="params">(<span class="keyword">final</span> List&lt;String&gt; recipients, <span class="keyword">final</span> String subject, <span class="keyword">final</span> String content)</span></span>&#123;</div><div class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="keyword">try</span>&#123;</div><div class="line">                    send(recipients, subject, content);</div><div class="line">                &#125;<span class="keyword">catch</span>(Exception e)&#123;</div><div class="line">                    System.out.println(<span class="string">"send group email by asynchronous fail!"</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;).start();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendSingleEmailTest</span><span class="params">()</span></span>&#123;</div><div class="line">       String recipient = <span class="string">"XXX@XX.com"</span>;</div><div class="line">       String subject = <span class="string">"测试单发邮件"</span>;</div><div class="line">       String content = <span class="string">"&lt;h3&gt;测试单发邮件&lt;/h3&gt;"</span>;</div><div class="line">       <span class="keyword">try</span>&#123;</div><div class="line">           emailUtil.sendByAsynchronous(recipient, subject, content);</div><div class="line">       &#125;<span class="keyword">catch</span>(Exception e)&#123;</div><div class="line">           logger.info(<span class="string">"sendSingleEmail test fail!"</span>);</div><div class="line">           e.printStackTrace();</div><div class="line">       &#125;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="meta">@Test</span></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendGroupEmailTest</span><span class="params">()</span></span>&#123;</div><div class="line">       ArrayList&lt;String&gt; recipients = <span class="keyword">new</span> ArrayList&lt;String&gt;();</div><div class="line">       recipients.add(<span class="string">"XXX@XX.com"</span>);</div><div class="line">       recipients.add(<span class="string">"XXX@XX.com"</span>);</div><div class="line">       recipients.add(<span class="string">"XXX@XX.com"</span>);</div><div class="line">       String subject = <span class="string">"测试群发邮件"</span>;</div><div class="line">       String content = <span class="string">"&lt;h3&gt;测试群发邮件&lt;/h3&gt;"</span>;</div><div class="line">       <span class="keyword">try</span>&#123;</div><div class="line">           emailUtil.sendByAsynchronous(recipients, subject, content);</div><div class="line">       &#125;<span class="keyword">catch</span>(Exception e)&#123;</div><div class="line">           logger.info(<span class="string">"sendGroupEmail test fail!"</span>);</div><div class="line">           e.printStackTrace();</div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>EmailUtil同时支持发送普通邮件和包含HTML格式的邮件，发送HTML格式的邮件只需将HTML的内容加入content参数。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近刚把手上的项目忙完，趁着手头还有些空闲时间，把项目中值得记录和分享的东西写出来，今天先分享一下spring发送邮件的具体实现。&lt;/p&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;要想发送邮件，肯定先要有一个邮件发送方，项目中用到的是公司的企业邮箱，如果没有的话可以使用自己的qq邮箱或者其他邮箱，只不过要先开启SMTP服务，具体方法自查哈~邮件接收方那就随意写了……&lt;/p&gt;
    
    </summary>
    
      <category term="JavaWeb" scheme="http://www.zpreston.top/categories/JavaWeb/"/>
    
    
      <category term="spring" scheme="http://www.zpreston.top/tags/spring/"/>
    
      <category term="发送邮件" scheme="http://www.zpreston.top/tags/%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>SSM框架整合Redis</title>
    <link href="http://www.zpreston.top/articles/f3911b95/"/>
    <id>http://www.zpreston.top/articles/f3911b95/</id>
    <published>2017-09-05T08:11:37.000Z</published>
    <updated>2017-11-14T07:58:50.152Z</updated>
    
    <content type="html"><![CDATA[<p>前面的博文<a href="https://zprestonx.github.io/posts/26fa17cc/" title="SSM框架搭建及简单应用" target="_blank" rel="external">SSM框架搭建及简单应用</a>中已经介绍了SSM框架的搭建流程，这次将在前面搭建的SSM框架基础上整合Redis。Redis是一种key-value数据库，不同于传统的关系型数据库，Redis是一种非关系型数据库（NoSQL），其数据类型包括字符串、列表、哈希、集合和有序集合。由于Redis在内存操作数据，存取方便快捷，但易受内存容量的限制，所以一般不将Redis用作主数据库，而是用来存取一些数据量小且对实时性要求较高的数据，比如缓存场景。在介绍完整合Redis的流程后，我会写一个通过Redis实现缓存的例子。</p>
<a id="more"></a>
<h2 id="SSM整合Redis"><a href="#SSM整合Redis" class="headerlink" title="SSM整合Redis"></a>SSM整合Redis</h2><ol>
<li><p>在pom.xml中添加依赖包</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- spring-redis --&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.data<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">   <span class="comment">&lt;!-- redis客户端 --&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>在resource包下新建redis.properties文件</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">redis.host = localhost</div><div class="line">redis.port = 6379</div><div class="line">redis.pass =</div><div class="line">redis.maxIdle = 200</div><div class="line">redis.maxActive = 1024</div><div class="line">redis.maxWait = 10000</div><div class="line">redis.testOnBorrow = true</div></pre></td></tr></table></figure>
</li>
<li><p>在spring文件夹下新建spring-redis.xml文件</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:util</span>=<span class="string">"http://www.springframework.org/schema/util"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:task</span>=<span class="string">"http://www.springframework.org/schema/task"</span></span></div><div class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/util</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/util/spring-util-4.3.xsd</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/mvc</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/aop</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/aop/spring-aop-4.3.xsd</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/context</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/context/spring-context-4.3.xsd"</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 读取redis配置文件 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:redis.properties"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"poolConfig"</span> <span class="attr">class</span>=<span class="string">"redis.clients.jedis.JedisPoolConfig"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.maxIdle&#125;"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnBorrow"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.testOnBorrow&#125;"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 连接池配置 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"connectionFactory"</span> <span class="attr">class</span>=<span class="string">"org.springframework.data.redis.connection.jedis.JedisConnectionFactory"</span> &gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hostName"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.host&#125;"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"port"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.port&#125;"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.pass&#125;"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"poolConfig"</span>  <span class="attr">ref</span>=<span class="string">"poolConfig"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 连接池工厂配置 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"redisTemplate"</span> <span class="attr">class</span>=<span class="string">" org.springframework.data.redis.core.RedisTemplate"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connectionFactory"</span> <span class="attr">ref</span>=<span class="string">"connectionFactory"</span>/&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 需配置Serializer，Java对象经序列化后才能在Redis数据库中存取 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"keySerializer"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.data.redis.serializer.StringRedisSerializer"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"valueSerializer"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>至此，SSM框架中Redis的整合已经完成，下面实现一个页面缓存的例子来验证。<strong>注意，在运行之前确保Redis数据库服务已经打开。</strong></p>
<h2 id="利用Redis实现页面缓存"><a href="#利用Redis实现页面缓存" class="headerlink" title="利用Redis实现页面缓存"></a>利用Redis实现页面缓存</h2><ol>
<li><p>编写序列化工具类SerializeUtil<br>类对象需要经过序列化或者反序列化才能在Redis数据库中存取，SerializeUtil负责对类对象进行序列化和反序列操作</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SerializeUtil</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] serialize(Object object)&#123;</div><div class="line">        ObjectOutputStream oos = <span class="keyword">null</span>;</div><div class="line">        ByteArrayOutputStream baos = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            baos = <span class="keyword">new</span> ByteArrayOutputStream();</div><div class="line">            oos = <span class="keyword">new</span> ObjectOutputStream(baos);</div><div class="line">            oos.writeObject(object);</div><div class="line">            <span class="keyword">byte</span>[] bytes = baos.toByteArray();</div><div class="line">            <span class="keyword">return</span> bytes;</div><div class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">unserialize</span><span class="params">(<span class="keyword">byte</span>[] bytes)</span></span>&#123;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">null</span> == bytes)&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">        ByteArrayInputStream bais = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            bais = <span class="keyword">new</span> ByteArrayInputStream(bytes);</div><div class="line">            ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(bais);</div><div class="line">            <span class="keyword">return</span> ois.readObject();</div><div class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>编写Redis数据库工具类JedisUtil<br>JedisUtil工具负责连接Redis数据库</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisUtil</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String ADDR = <span class="string">"localhost"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> PORT = <span class="number">6379</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> MAX_ACTIVE = <span class="number">1024</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> MAX_IDLE = <span class="number">200</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> MAX_WAIT = <span class="number">10000</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> TIMEOUT = <span class="number">10000</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> TEST_ON_BORROW = <span class="keyword">true</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JedisPool jedisPool = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">    <span class="keyword">static</span>&#123;</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            JedisPoolConfig config = <span class="keyword">new</span> JedisPoolConfig();</div><div class="line">            config.setMaxIdle(MAX_IDLE);</div><div class="line">            config.setMaxWaitMillis(MAX_WAIT);</div><div class="line">            config.setTestOnBorrow(TEST_ON_BORROW);</div><div class="line">            jedisPool = <span class="keyword">new</span> JedisPool(config, ADDR, PORT, TIMEOUT);</div><div class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">static</span> Jedis <span class="title">getJedis</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            <span class="keyword">if</span>(jedisPool != <span class="keyword">null</span>)&#123;</div><div class="line">                Jedis jedis = jedisPool.getResource();</div><div class="line">                <span class="keyword">return</span> jedis;</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>编写缓存类RedisCache<br>实现页面缓存需要实现Java中的Cache接口</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisCache</span> <span class="keyword">implements</span> <span class="title">Cache</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ReadWriteLock readWriteLock = <span class="keyword">new</span> ReentrantReadWriteLock();</div><div class="line">    <span class="keyword">private</span> String id;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RedisCache</span><span class="params">(<span class="keyword">final</span> String id)</span></span>&#123;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">null</span> == id)&#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Cache instances require an ID"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">this</span>.id = id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getId</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">putObject</span><span class="params">(Object key, Object value)</span> </span>&#123;</div><div class="line">        JedisUtil.getJedis().set(SerializeUtil.serialize(key.toString()),</div><div class="line">                SerializeUtil.serialize(value));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getObject</span><span class="params">(Object key)</span> </span>&#123;</div><div class="line">        Object value = SerializeUtil.unserialize(JedisUtil.getJedis()</div><div class="line">        .get(SerializeUtil.serialize(key.toString())));</div><div class="line">        <span class="keyword">return</span> value;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">removeObject</span><span class="params">(Object key)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> JedisUtil.getJedis().expire(SerializeUtil.serialize(key.toString()), <span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</div><div class="line">        JedisUtil.getJedis().flushDB();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> Integer.valueOf(JedisUtil.getJedis().dbSize().toString());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> ReadWriteLock <span class="title">getReadWriteLock</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> readWriteLock;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>在domain包下新建Person类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/***</span></div><div class="line"><span class="comment"> * create table `redis_person`(</span></div><div class="line"><span class="comment"> * `id` int not null comment '用户id',</span></div><div class="line"><span class="comment"> * `name` varchar(20) not null comment '用户姓名',</span></div><div class="line"><span class="comment"> * `pwd` varchar(20) not null comment '密码',</span></div><div class="line"><span class="comment"> * primary key(`id`)</span></div><div class="line"><span class="comment"> * )engine=InnoDB auto_increment=1000 default charset=utf8 comment='redis用户表';</span></div><div class="line"><span class="comment"> * insert into `redis_person` values</span></div><div class="line"><span class="comment"> * (1,'张三','123456'),</span></div><div class="line"><span class="comment"> * (2,'李四','123456'),</span></div><div class="line"><span class="comment"> * (3,'王五','123456');</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">1695973853274402680L</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</div><div class="line">    <span class="keyword">private</span> String name;</div><div class="line">    <span class="keyword">private</span> String pwd;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span></span>&#123;&#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(<span class="keyword">int</span> id, String name, String pwd)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.id = id;</div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">        <span class="keyword">this</span>.pwd = pwd;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">getSerialVersionUID</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> serialVersionUID;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.id = id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPwd</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> pwd;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPwd</span><span class="params">(String pwd)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.pwd = pwd;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>在dao包下新建PersonDao接口</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PersonDao</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function">Person <span class="title">getPersonById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>在service包下新建PersonService接口</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PersonService</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function">Person <span class="title">getPersonById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>在serviceImpl包下新建PersonServiceImpl类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Service</span>(<span class="string">"personService"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonServiceImpl</span> <span class="keyword">implements</span> <span class="title">PersonService</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> PersonDao personDao;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Person <span class="title">getPersonById</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</div><div class="line">        Person person = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            person = personDao.getPersonById(id);</div><div class="line">        &#125;<span class="keyword">catch</span>(DataAccessException e)&#123;</div><div class="line">            System.out.println(e.getLocalizedMessage());</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> person;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>在mapper包下新建PersonDao.xml<br>PersonDao文件负责把PersonDao和缓存类RedisCache进行映射，当页面需要数据时首先先从缓存中查找，若查找不到数据则会连接主数据库进行查找，并将这些数据存入Redis数据库作为缓存数据</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</div><div class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></div><div class="line"><span class="meta">                "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.zpreston.dao.PersonDao"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">type</span>=<span class="string">"com.zpreston.redis.RedisCache"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getPersonById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"Person"</span> <span class="attr">useCache</span>=<span class="string">"true"</span>&gt;</span></div><div class="line">        SELECT</div><div class="line">        *</div><div class="line">        FROM</div><div class="line">        `redis_person`</div><div class="line">        WHERE</div><div class="line">        id = #&#123;id&#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>在controller包下新建PersonController类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> PersonService personService;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(value=<span class="string">"/toQueryPerson"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toQueryPerson</span><span class="params">(Model model)</span></span>&#123;</div><div class="line">        Person person = personService.getPersonById(<span class="number">1</span>);</div><div class="line">        String personJson = <span class="keyword">new</span> Gson().toJson(person);</div><div class="line">        Logger logger = LoggerFactory.getLogger(PersonController.class);</div><div class="line">        logger.info(personJson);</div><div class="line">        model.addAttribute(<span class="string">"person"</span>,personJson);</div><div class="line">        <span class="keyword">return</span> <span class="string">"showUser"</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>例子中用到的视图都是前面的博文<a href="https://zprestonx.github.io/2017/09/01/SSM框架搭建及简单应用/" title="SSM框架搭建及简单应用" target="_blank" rel="external">SSM框架搭建及简单应用</a>中的例子，只在showUser.jsp中进行了少量的改动</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> <span class="attr">prefix</span>=<span class="string">"c"</span> %&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">isELIgnored</span>=<span class="string">"false"</span> <span class="attr">pageEncoding</span>=<span class="string">"utf-8"</span> %&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">person = $&#123;person&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><ol>
<li>在浏览器中输入<a href="http://localhost:8080/toQueryPerson" target="_blank" rel="external">http://localhost:8080/toQueryPerson</a><br>结果如下图。同时控制台中的信息显示，这些数据是通过查询数据库得到的<br><img src="http://ov0hfjxnq.bkt.clouddn.com/blog/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BB%93%E6%9E%9C.png" alt=""><br><img src="http://ov0hfjxnq.bkt.clouddn.com/blog/%E6%8E%A7%E5%88%B6%E5%8F%B01.png" alt=""></li>
<li>再次在浏览器中输入<a href="http://localhost:8080/toQueryPerson" target="_blank" rel="external">http://localhost:8080/toQueryPerson</a><br>结果如下图。同时控制台中的信息没有查询数据库的相关信息，说明数据是从缓存中读取<br><img src="http://ov0hfjxnq.bkt.clouddn.com/blog/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BB%93%E6%9E%9C.png" alt=""><br><img src="http://ov0hfjxnq.bkt.clouddn.com/blog/%E6%8E%A7%E5%88%B6%E5%8F%B02.png" alt=""></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前面的博文&lt;a href=&quot;https://zprestonx.github.io/posts/26fa17cc/&quot; title=&quot;SSM框架搭建及简单应用&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SSM框架搭建及简单应用&lt;/a&gt;中已经介绍了SSM框架的搭建流程，这次将在前面搭建的SSM框架基础上整合Redis。Redis是一种key-value数据库，不同于传统的关系型数据库，Redis是一种非关系型数据库（NoSQL），其数据类型包括字符串、列表、哈希、集合和有序集合。由于Redis在内存操作数据，存取方便快捷，但易受内存容量的限制，所以一般不将Redis用作主数据库，而是用来存取一些数据量小且对实时性要求较高的数据，比如缓存场景。在介绍完整合Redis的流程后，我会写一个通过Redis实现缓存的例子。&lt;/p&gt;
    
    </summary>
    
      <category term="JavaWeb" scheme="http://www.zpreston.top/categories/JavaWeb/"/>
    
    
      <category term="spring" scheme="http://www.zpreston.top/tags/spring/"/>
    
      <category term="redis" scheme="http://www.zpreston.top/tags/redis/"/>
    
      <category term="缓存" scheme="http://www.zpreston.top/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>SSM框架搭建及简单应用</title>
    <link href="http://www.zpreston.top/articles/26fa17cc/"/>
    <id>http://www.zpreston.top/articles/26fa17cc/</id>
    <published>2017-09-01T08:37:47.000Z</published>
    <updated>2017-11-14T07:37:00.718Z</updated>
    
    <content type="html"><![CDATA[<p>SSM（Spring+SpringMVC+MyBatis）框架集由Spring、SpringMVC、MyBatis三个开源框架整合而成，常作为数据源较简单的web项目的框架。</p>
<ul>
<li>其中spring是一个轻量级的控制反转（IoC）和面向切面（AOP）的容器框架。</li>
<li>SpringMVC分离了控制器、模型对象、分派器以及处理程序对象的角色，这种分离让它们更容易进行定制。</li>
<li>MyBatis是一个支持普通SQL查询，存储过程和高级映射的优秀持久层框架。</li>
</ul>
<a id="more"></a>
<h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><ul>
<li>IntelliJ IDEA</li>
<li>Maven</li>
<li>Tomcat</li>
<li>MySQL</li>
</ul>
<h2 id="SSM框架搭建"><a href="#SSM框架搭建" class="headerlink" title="SSM框架搭建"></a>SSM框架搭建</h2><h3 id="用IntelliJ创建Maven项目，不知道的童鞋自行搜索，这里不再占据篇幅赘述。目录结构可以参考"><a href="#用IntelliJ创建Maven项目，不知道的童鞋自行搜索，这里不再占据篇幅赘述。目录结构可以参考" class="headerlink" title="用IntelliJ创建Maven项目，不知道的童鞋自行搜索，这里不再占据篇幅赘述。目录结构可以参考"></a>用IntelliJ创建Maven项目，不知道的童鞋自行搜索，这里不再占据篇幅赘述。目录结构可以参考</h3><p><img src="http://ov0hfjxnq.bkt.clouddn.com/%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png" alt=""></p>
<h3 id="配置pom-xml文件，pom配置文件是Maven项目的核心，他可以很方便地管理项目的依赖包，无需手动导入，具体的配置如下："><a href="#配置pom-xml文件，pom配置文件是Maven项目的核心，他可以很方便地管理项目的依赖包，无需手动导入，具体的配置如下：" class="headerlink" title="配置pom.xml文件，pom配置文件是Maven项目的核心，他可以很方便地管理项目的依赖包，无需手动导入，具体的配置如下："></a>配置pom.xml文件，pom配置文件是Maven项目的核心，他可以很方便地管理项目的依赖包，无需手动导入，具体的配置如下：</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></div><div class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zpreston<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MyFirstSSM<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>MyFirstSSM Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.apache.org<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">org.apache.logging.log4j.version</span>&gt;</span>2.6.2<span class="tag">&lt;/<span class="name">org.apache.logging.log4j.version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>5.1.37<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">com.alibaba.druid.version</span>&gt;</span>1.0.25<span class="tag">&lt;/<span class="name">com.alibaba.druid.version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">com.mybatis.mybatis.version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">com.mybatis.mybatis.version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">com.mybatis.mybatis_spring.version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">com.mybatis.mybatis_spring.version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">com.google.gson.version</span>&gt;</span>2.7<span class="tag">&lt;/<span class="name">com.google.gson.version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">javax.servlet.version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">javax.servlet.version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">org.springframework.version</span>&gt;</span>4.3.2.RELEASE<span class="tag">&lt;/<span class="name">org.springframework.version</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 1.日志 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 2.数据库 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- druid是阿里巴巴开源出来的数据库连接池 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;com.alibaba.druid.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- MyBatis --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;com.mybatis.mybatis.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;com.mybatis.mybatis_spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 3.Servlet web --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--Servlet版本设置--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;javax.servlet.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 4.Spring --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 1)Spring核心 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;org.springframework.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;org.springframework.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;org.springframework.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 2)Spring DAO层 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;org.springframework.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;org.springframework.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 3)Spring web --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;org.springframework.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;org.springframework.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 4)Spring test --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;org.springframework.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;com.google.gson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>MyFirstSSM<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="配置web-xml文件，web-xml文件包含了web项目的全局配置，可以指定前端控制器DispatcherServlet的拦截规则和SSM框架配置文件的加载路径，具体配置如下："><a href="#配置web-xml文件，web-xml文件包含了web项目的全局配置，可以指定前端控制器DispatcherServlet的拦截规则和SSM框架配置文件的加载路径，具体配置如下：" class="headerlink" title="配置web.xml文件，web.xml文件包含了web项目的全局配置，可以指定前端控制器DispatcherServlet的拦截规则和SSM框架配置文件的加载路径，具体配置如下："></a>配置web.xml文件，web.xml文件包含了web项目的全局配置，可以指定前端控制器DispatcherServlet的拦截规则和SSM框架配置文件的加载路径，具体配置如下：</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE web-app PUBLIC</span></div><div class="line"><span class="meta"> "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"</span></div><div class="line"><span class="meta"> "http://java.sun.com/dtd/web-app_2_3.dtd" &gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></div><div class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee</span></span></div><div class="line"><span class="tag"><span class="string">                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</span></span></div><div class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"3.1"</span> <span class="attr">metadata-complete</span>=<span class="string">"true"</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>MySSM<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mvc-dispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 配置springMVC需要加载的配置文件</span></div><div class="line"><span class="comment">        spring-dao.xml,spring-service.xml,spring-web.xml</span></div><div class="line"><span class="comment">        Mybatis - &gt; spring -&gt; springmvc</span></div><div class="line"><span class="comment">     --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring/spring-*.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mvc-dispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!--druid ==&gt; WEB方式监控配置--&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DruidStatView<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.alibaba.druid.support.http.StatViewServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DruidStatView<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/druid/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>druidWebStatFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.alibaba.druid.support.http.WebStatFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>exclusions<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>/public/*,*.js,*.css,/druid*,*.jsp,*.swf<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>principalSessionName<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>sessionInfo<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>profileEnable<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>druidWebStatFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="配置jdbc-properties文件，jdbc-properties文件是对数据库相关参数的配置"><a href="#配置jdbc-properties文件，jdbc-properties文件是对数据库相关参数的配置" class="headerlink" title="配置jdbc.properties文件，jdbc.properties文件是对数据库相关参数的配置"></a>配置jdbc.properties文件，jdbc.properties文件是对数据库相关参数的配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">jdbc.driver = com.mysql.jdbc.Driver</div><div class="line">jdbc.url = jdbc:mysql:<span class="comment">//localhost:3306/test</span></div><div class="line">jdbc.username = root</div></pre></td></tr></table></figure>
<p>我的test数据库中，root用户无需密码，故此处没有声明jdbc.password参数，有密码的自行加上</p>
<h3 id="配置mybatis-config文件，mybatis-config是mybatis的全局配置"><a href="#配置mybatis-config文件，mybatis-config是mybatis的全局配置" class="headerlink" title="配置mybatis.config文件，mybatis.config是mybatis的全局配置"></a>配置mybatis.config文件，mybatis.config是mybatis的全局配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</div><div class="line"><span class="meta">&lt;!DOCTYPE configuration</span></div><div class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></div><div class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 配置全局属性 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 使用jdbc的getGeneratedKeys获取数据库自增主键值 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"useGeneratedKeys"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 使用列别名替换列名 默认:true --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"useColumnLabel"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 开启驼峰命名转换:Table&#123;create_time&#125; -&gt; Entity&#123;createTime&#125; --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"mapUnderscoreToCamelCase"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="配置SSM框架最主要的三个配置文件-spring-dao-xml，spring-service-xml，spring-web-xml"><a href="#配置SSM框架最主要的三个配置文件-spring-dao-xml，spring-service-xml，spring-web-xml" class="headerlink" title="配置SSM框架最主要的三个配置文件 spring-dao.xml，spring-service.xml，spring-web.xml"></a>配置SSM框架最主要的三个配置文件 spring-dao.xml，spring-service.xml，spring-web.xml</h3><p>spring-dao.xml主要用于整合mybatis，将dao层与mapper层下的文件映射起来，简化开发人员对数据库中数据的操作<br>dao文件是接口文件，dao文件中的每个接口方法对应mapper文件的一个数据库操作<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></div><div class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/context</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 配置整合mybatis过程 --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 1.配置数据库相关参数properties的属性：$&#123;url&#125; --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 使用数据库配置文件解耦 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:jdbc.properties"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 2.数据库连接池 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span></span></div><div class="line"><span class="tag">          <span class="attr">init-method</span>=<span class="string">"init"</span> <span class="attr">destroy-method</span>=<span class="string">"close"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 配置连接池属性 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 配置初始化大小、最小、最大 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"initialSize"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minIdle"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxActive"</span> <span class="attr">value</span>=<span class="string">"10"</span> /&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 配置获取连接等待超时的时间 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxWait"</span> <span class="attr">value</span>=<span class="string">"10000"</span> /&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"timeBetweenEvictionRunsMillis"</span> <span class="attr">value</span>=<span class="string">"60000"</span> /&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minEvictableIdleTimeMillis"</span> <span class="attr">value</span>=<span class="string">"300000"</span> /&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testWhileIdle"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 这里建议配置为TRUE，防止取到的连接不可用 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnBorrow"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnReturn"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"poolPreparedStatements"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxPoolPreparedStatementPerConnectionSize"</span></span></div><div class="line"><span class="tag">                  <span class="attr">value</span>=<span class="string">"20"</span> /&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 这里配置提交方式，默认就是TRUE，可以不用配置 --&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultAutoCommit"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 验证连接有效与否的SQL，不同的数据配置不同 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"validationQuery"</span> <span class="attr">value</span>=<span class="string">"select 1 "</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"filters"</span> <span class="attr">value</span>=<span class="string">"stat"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"proxyFilters"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"logFilter"</span> /&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 3.配置SqlSessionFactory对象 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 注入数据库连接池 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 配置MyBaties全局配置文件:mybatis-config.xml --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:mybatis-config.xml"</span>/&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 扫描entity包 使用别名 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"typeAliasesPackage"</span> <span class="attr">value</span>=<span class="string">"com.zpreston.domain"</span>/&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 扫描sql配置文件:mapper需要的xml文件 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mapperLocations"</span> <span class="attr">value</span>=<span class="string">"classpath:mapper/*.xml"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 注入sqlSessionFactory --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sqlSessionFactoryBeanName"</span> <span class="attr">value</span>=<span class="string">"sqlSessionFactory"</span>/&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 给出需要扫描Dao接口包 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"com.zpreston.dao"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 上面的druid的配置 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"logFilter"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.filter.logging.Slf4jLogFilter"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"statementExecutableSqlLogEnable"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>spring-service.xml主要用于整合Spring，自动扫描被@Service注释的类，并自动创建实例分配给被@Autowired或者@Resource注释的对象<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></div><div class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/context</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/context/spring-context.xsd</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/tx</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/tx/spring-tx.xsd"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 扫描service包下所有使用注解的类型 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.zpreston.service.serviceImpl"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 配置事务管理器 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span></span></div><div class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 注入数据库连接池 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 配置基于注解的声明式事务 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>spring-web.xml主要用于整合SpringMVC，可以设置viewResolver，自动在返回字符串上加上设置的前缀和后缀，同时会自动扫描@Controller注释的类，这些类会根据设置的mapping拦截匹配的请求<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></div><div class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></div><div class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/context</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/context/spring-context.xsd</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/mvc</span></span></div><div class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 配置SpringMVC --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 1.开启SpringMVC注解模式 --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 简化配置：</span></div><div class="line"><span class="comment">        (1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter</span></div><div class="line"><span class="comment">        (2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持</span></div><div class="line"><span class="comment">    --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 3.配置jsp 显示ViewResolver --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"viewClass"</span> <span class="attr">value</span>=<span class="string">"org.springframework.web.servlet.view.JstlView"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/jsp/"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 4.扫描web相关的bean配置 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.zpreston.controller"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 制定扫包规则 ,只扫描使用@Controller注解的JAVA类 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">"annotation"</span> <span class="attr">expression</span>=<span class="string">"org.springframework.stereotype.Controller"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>以上就是SSM框架的搭建过程，接下来我会以一个例子来验证框架是否搭建成功</p>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><ol>
<li><p>在domain包（也称model）下新建User类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/***</span></div><div class="line"><span class="comment"> 创建数据库用户表：</span></div><div class="line"><span class="comment"> CREATE TABLE `ssm_user` (</span></div><div class="line"><span class="comment"> `login_id` int NOT NULL COMMENT '登陆ID',</span></div><div class="line"><span class="comment"> `pwd` varchar(20) NOT NULL COMMENT '用户密码',</span></div><div class="line"><span class="comment"> `name` varchar(100) NOT NULL COMMENT '用户姓名',</span></div><div class="line"><span class="comment"> PRIMARY KEY (`login_id`)</span></div><div class="line"><span class="comment"> ) ENGINE=InnoDB AUTO_INCREMENT=1000 DEFAULT CHARSET=utf8 COMMENT='SSM用户表';</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment"> 插入默认数据：</span></div><div class="line"><span class="comment"> INSERT INTO `user` (`login_id`,`pwd`,`name`)</span></div><div class="line"><span class="comment"> VALUES</span></div><div class="line"><span class="comment"> (1,'123456','张三'),</span></div><div class="line"><span class="comment"> (2,'123456','李四'),</span></div><div class="line"><span class="comment"> (3,'123456','王五'),</span></div><div class="line"><span class="comment"> (4,'123456','赵六');</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> login_id;</div><div class="line">    <span class="keyword">private</span> String pwd;</div><div class="line">    <span class="keyword">private</span> String name;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getLogin_id</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> login_id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLogin_id</span><span class="params">(<span class="keyword">int</span> login_id)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.login_id = login_id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPwd</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> pwd;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPwd</span><span class="params">(String pwd)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.pwd = pwd;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</div><div class="line">                <span class="string">"login_id="</span> + login_id +</div><div class="line">                <span class="string">", pwd='"</span> + pwd + <span class="string">'\''</span> +</div><div class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</div><div class="line">                <span class="string">'&#125;'</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>在dao包下新建UserDao接口</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</div><div class="line">    <span class="function">User <span class="title">findUserByLoginId</span><span class="params">(<span class="keyword">int</span> login_id)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>在mapper文件下新建UserDao.xml</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</div><div class="line">&lt;!DOCTYPE mapper PUBLIC <span class="string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></div><div class="line">        <span class="string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</div><div class="line">&lt;!-- namespace指定映射的是dao包下的哪个接口类，id对应接口类的接口方法 --&gt;</div><div class="line">&lt;mapper namespace=<span class="string">"com.zpreston.dao.UserDao"</span>&gt;</div><div class="line">    &lt;select id=<span class="string">"findUserByLoginId"</span> parameterType=<span class="string">"int"</span> resultType=<span class="string">"User"</span>&gt;</div><div class="line">        SELECT</div><div class="line">        *</div><div class="line">        FROM</div><div class="line">        `ssm_user`</div><div class="line">        WHERE</div><div class="line">        login_id = #&#123;login_id&#125;</div><div class="line">    &lt;/select&gt;</div><div class="line">&lt;/mapper&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>在service包下新建UserDaoService接口</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDaoService</span> </span>&#123;</div><div class="line">    <span class="function">User <span class="title">findUserByLoginId</span><span class="params">(<span class="keyword">int</span> login_id)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>在serviceImpl包下新建UserServiceImpl类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Service</span>(<span class="string">"userService"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserDaoService</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> UserDao userDao;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findUserByLoginId</span><span class="params">(<span class="keyword">int</span> login_id)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> userDao.findUserByLoginId(login_id);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>在controller包下新建UserController类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> UserServiceImpl userService;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/index"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">forIndex</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/findUser"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">findUser</span><span class="params">(Model model)</span></span>&#123;</div><div class="line">        User user = userService.findUserByLoginId(<span class="number">1</span>);</div><div class="line">        String userJson = <span class="keyword">new</span> Gson().toJson(user);</div><div class="line">        Logger logger = LoggerFactory.getLogger(UserController.class);</div><div class="line">        logger.info(userJson);</div><div class="line">        model.addAttribute(<span class="string">"user"</span>, userJson);</div><div class="line">        <span class="keyword">return</span> <span class="string">"showUser"</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>视图中用到的两个jsp文件分别为index.jsp何showUser.jsp<br>index.jsp</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;html&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;h2&gt;Hello World!&lt;/h2&gt;</div><div class="line"></div><div class="line">&lt;form action=<span class="string">"findUser"</span> method=<span class="string">"get"</span>&gt;</div><div class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"submit"</span>/&gt;</div><div class="line">&lt;/form&gt;</div><div class="line"></div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>showUser.jsp<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;%@ taglib uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span> %&gt;</div><div class="line">&lt;%@ page isELIgnored=<span class="string">"false"</span> pageEncoding=<span class="string">"utf-8"</span> %&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;title&gt;Title&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">user = $&#123;user&#125;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
<h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>配置Tomcat启动后，浏览器输入<a href="http://localhost:8080/index" target="_blank" rel="external">http://localhost:8080/index</a><br><img src="http://ov0hfjxnq.bkt.clouddn.com/index%E7%BB%93%E6%9E%9C.png" alt=""><br>点击submit，转发到<a href="http://localhost:8080/showUser" target="_blank" rel="external">http://localhost:8080/showUser</a><br><img src="http://ov0hfjxnq.bkt.clouddn.com/showUser%E7%BB%93%E6%9E%9C.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SSM（Spring+SpringMVC+MyBatis）框架集由Spring、SpringMVC、MyBatis三个开源框架整合而成，常作为数据源较简单的web项目的框架。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;其中spring是一个轻量级的控制反转（IoC）和面向切面（AOP）的容器框架。&lt;/li&gt;
&lt;li&gt;SpringMVC分离了控制器、模型对象、分派器以及处理程序对象的角色，这种分离让它们更容易进行定制。&lt;/li&gt;
&lt;li&gt;MyBatis是一个支持普通SQL查询，存储过程和高级映射的优秀持久层框架。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="JavaWeb" scheme="http://www.zpreston.top/categories/JavaWeb/"/>
    
    
      <category term="spring" scheme="http://www.zpreston.top/tags/spring/"/>
    
      <category term="springMVC" scheme="http://www.zpreston.top/tags/springMVC/"/>
    
      <category term="mybatis" scheme="http://www.zpreston.top/tags/mybatis/"/>
    
      <category term="开发环境搭建" scheme="http://www.zpreston.top/tags/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>初探SpringMVC-第一个SpringMVC应用</title>
    <link href="http://www.zpreston.top/articles/bd45a759/"/>
    <id>http://www.zpreston.top/articles/bd45a759/</id>
    <published>2017-08-25T10:09:31.000Z</published>
    <updated>2017-11-08T02:08:46.150Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>二叉树中和为某一值的路径</title>
    <link href="http://www.zpreston.top/articles/ffeb5a9f/"/>
    <id>http://www.zpreston.top/articles/ffeb5a9f/</id>
    <published>2017-08-21T09:28:06.000Z</published>
    <updated>2017-11-14T07:37:00.816Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>输入一颗二叉树和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。<br>路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。</p>
<a id="more"></a>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p><strong>注意</strong>问题描述中的路径是从根节点到<strong>叶节点</strong>，搜索策略应该采用广度优先搜索，也就是先序遍历</p>
<p>需要两个存储变量，一个变量<strong>path</strong>存储当前搜索路径上的所有节点，一个变量<strong>result</strong>存储符合要求的所有路径<br>每当搜索到一个节点，都将当前节点添加到<strong>path</strong>中<br>当搜索到叶子节点时，判断当前路径上的节点值的和是否与目标值相等，相等则将当前路径添加到<strong>result</strong>中，之后在<strong>path</strong>中将当前叶子节点移除，回溯到上个节点继续判断<br>由此可以看出<strong>path</strong>的操作数据的方式跟<strong>栈(Stack)</strong>很相似，可以将<strong>path</strong>定义成<strong>栈(Stack)</strong></p>
<p>判断路径上的节点值的和是否与<strong>目标值</strong>相等时，可以有两种方法：</p>
<ol>
<li><strong>target</strong>值初始为0，每当搜索到一个节点，把节点值累加到<strong>target</strong>上，搜索到叶子节点时判断<strong>target</strong>值与<strong>目标值</strong>是否一致</li>
<li><strong>target</strong>值初始为<strong>目标值</strong>，每当搜索到一个节点，下次搜索时将<strong>target</strong>值减去当前节点值，搜索到叶子节点时判断<strong>target</strong>值与叶子节点值是否一致<br>本次程序采用的时第2种方法</li>
</ol>
<h2 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//二叉树的数据结构</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TreeNode</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> val=<span class="number">0</span>;</div><div class="line">	TreeNode left=<span class="keyword">null</span>;</div><div class="line">	TreeNode right=<span class="keyword">null</span>;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">TreeNode</span><span class="params">(<span class="keyword">int</span> val)</span></span>&#123;<span class="keyword">this</span>.val=val;&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span>&#123;</div><div class="line">	<span class="keyword">public</span> ArrayList&lt;ArrayList&lt;Integer&gt;&gt; FindPath(TreeNode root,<span class="keyword">int</span> target) &#123;</div><div class="line">		ArrayList&lt;ArrayList&lt;Integer&gt;&gt; result=<span class="keyword">new</span> ArrayList&lt;ArrayList&lt;Integer&gt;&gt;();</div><div class="line">		<span class="keyword">if</span>(root==<span class="keyword">null</span>) <span class="keyword">return</span> result;</div><div class="line">		Stack&lt;Integer&gt; path=<span class="keyword">new</span> Stack&lt;Integer&gt;();</div><div class="line">		pathList(root,target,result,path);</div><div class="line">		<span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line">	<span class="comment">/*</span></div><div class="line"><span class="comment">	参数：二叉树的根节点，目标值，当前符合的所有路径，当前的搜索路径</span></div><div class="line"><span class="comment">	返回：无</span></div><div class="line"><span class="comment">	*/</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pathList</span><span class="params">(TreeNode root,<span class="keyword">int</span> target,ArrayList&lt;ArrayList&lt;Integer&gt;&gt; result,Stack&lt;Integer&gt; path)</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> num=root.val;</div><div class="line">		<span class="comment">//将当前搜索节点加入path中</span></div><div class="line">		path.push(num);</div><div class="line">		<span class="comment">//当搜索到叶子节点时</span></div><div class="line">		<span class="keyword">if</span>(root.left==<span class="keyword">null</span> &amp;&amp; root.right==<span class="keyword">null</span>)&#123;</div><div class="line">			<span class="comment">//当前节点值与target值相等，说明path中的路径符合要求</span></div><div class="line">			<span class="keyword">if</span>(num==target)&#123;</div><div class="line">				ArrayList&lt;Integer&gt; tmp=<span class="keyword">new</span> ArrayList&lt;Integer&gt;();</div><div class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> i:path)&#123;</div><div class="line">					tmp.add(i);</div><div class="line">				&#125;</div><div class="line">				<span class="comment">//将当前搜索路径加入到result中</span></div><div class="line">				result.add(tmp);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">return</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="comment">/*</span></div><div class="line"><span class="comment">		注意每次递归向下搜索时应该将target值减去已搜索的节点值</span></div><div class="line"><span class="comment">		每次回溯时应该移除该节点值</span></div><div class="line"><span class="comment">		*/</span></div><div class="line">		<span class="keyword">if</span>(root.left!=<span class="keyword">null</span>)&#123;</div><div class="line">			pathList(root.left,target-num,result,path);</div><div class="line">			path.pop();</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(root.right!=<span class="keyword">null</span>)&#123;</div><div class="line">			pathList(root.right,target-num,result,path);</div><div class="line">			path.pop();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;输入一颗二叉树和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。&lt;br&gt;路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://www.zpreston.top/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="二叉树" scheme="http://www.zpreston.top/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
      <category term="递归" scheme="http://www.zpreston.top/tags/%E9%80%92%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>重建二叉树</title>
    <link href="http://www.zpreston.top/articles/97fc4ab0/"/>
    <id>http://www.zpreston.top/articles/97fc4ab0/</id>
    <published>2017-08-21T06:08:13.000Z</published>
    <updated>2017-11-14T09:20:36.494Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。</p>
<a id="more"></a>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>假设输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}</p>
<ul>
<li>前序遍历顺序：根节点 -&gt; 左子树 -&gt; 右子树</li>
<li>中序遍历顺序：左子树 -&gt; 根节点 -&gt; 右子树</li>
</ul>
<p>由前序和中序的遍历顺序我们可以得到以下信息：</p>
<ul>
<li>1.前序序列的第一个节点总是该序列的根节点</li>
<li>2.在中序序列中，以1得到的根节点为界，左边的序列为根节点的左子树，右边的序列为右子树</li>
<li>3.通过2将前序和中序序列进行划分得到的左子树和右子树同样适用上述规则</li>
</ul>
<p>显然，从信息3可以看出来这道题可以采用递归的方式解决</p>
<h2 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//二叉树结构</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TreeNode</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> val;</div><div class="line">    TreeNode left;</div><div class="line">    TreeNode right;</div><div class="line">    TreeNode(<span class="keyword">int</span> x) &#123; val = x; &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">reConstructBinaryTree</span><span class="params">(<span class="keyword">int</span> [] pre,<span class="keyword">int</span> [] in)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> myReConstructBinaryTree(pre,<span class="number">0</span>,pre.length-<span class="number">1</span>,in,<span class="number">0</span>,in.length-<span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment">参数：前序序列，前序序列第一个元素和最后一个元素的索引，后序序列，后序序列第一个元素和最后一个元素的索引</span></div><div class="line"><span class="comment">返回：重建二叉树的头结点</span></div><div class="line"><span class="comment">*/</span></div><div class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">myReConstructBinaryTree</span><span class="params">(<span class="keyword">int</span> pre[],<span class="keyword">int</span> preHead,<span class="keyword">int</span> preTail,<span class="keyword">int</span> in[],<span class="keyword">int</span> inHead,<span class="keyword">int</span> inTail)</span></span>&#123;</div><div class="line">	<span class="comment">//头索引大于尾索引，说明序列的左子树或者右子树为空，返回null</span></div><div class="line">        <span class="keyword">if</span>(preHead&gt;preTail || inHead&gt;inTail) <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">	<span class="comment">//前序序列的第一个节点是该序列的根节点</span></div><div class="line">        TreeNode root=<span class="keyword">new</span> TreeNode(pre[preHead]);</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=inHead;i&lt;=inTail;i++)&#123;</div><div class="line">		<span class="comment">//在中序序列中找到该节点</span></div><div class="line">            <span class="keyword">if</span>(pre[preHead]==in[i])&#123;</div><div class="line">			<span class="comment">//节点左边为左子树，右边为右子树，对他们分别进行重建二叉树的操作</span></div><div class="line">                root.left=myReConstructBinaryTree(pre,preHead+<span class="number">1</span>,preHead+i-inHead,in,inHead,i-<span class="number">1</span>);</div><div class="line">                root.right=myReConstructBinaryTree(pre,preHead+i-inHead+<span class="number">1</span>,preTail,in,i+<span class="number">1</span>,inTail);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">	<span class="comment">//返回重建后的二叉树的根节点</span></div><div class="line">        <span class="keyword">return</span> root;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://www.zpreston.top/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="二叉树" scheme="http://www.zpreston.top/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
      <category term="递归" scheme="http://www.zpreston.top/tags/%E9%80%92%E5%BD%92/"/>
    
  </entry>
  
</feed>
